{"ast":null,"code":"var _jsxFileName = \"/Users/paryly/Desktop/Coding Bootcamp/clicky/clicky/src/App.js\";\nimport React from 'react';\nimport CharacterCard from \"./components/CharacterCard\";\nimport './App.css';\nimport characters from \"./characters.json\";\nimport Title from \"./components/Title\";\nimport NavBar from \"./components/Navbar\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters,\n      score: 0,\n      userSelect: []\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n      const clickValue = e.target.name;\n      console.log(this.state.userSelect);\n      console.log(\"You clicked on \" + clickValue);\n      this.setState({\n        userSelect: [...this.state.userSelect, clickValue]\n      });\n\n      const game = x => {\n        return new Set(x).size !== x.length;\n      };\n\n      console.log(game(this.state.userSelect));\n    };\n\n    this.scoring = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.shuffle = () => {\n      const characters = this.state.characters.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n      console.log(characters);\n      this.setState({\n        characters\n      }); // console.log(this.state.characters)\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      key: this.state.characters.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.characters.map(character => React.createElement(CharacterCard, {\n      key: character.id,\n      clickValue: this.handleClick,\n      shuffle: this.shuffle,\n      name: character.name,\n      image: character.image,\n      score: this.scoring,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paryly/Desktop/Coding Bootcamp/clicky/clicky/src/App.js"],"names":["React","CharacterCard","characters","Title","NavBar","App","Component","state","score","userSelect","handleClick","e","preventDefault","clickValue","target","name","console","log","setState","game","x","Set","size","length","scoring","shuffle","sort","a","b","Math","random","render","id","map","character","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNL,MAAAA,UADM;AAENM,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,UAAU,EAAE;AAHN,KAFwB;;AAAA,SAQhCC,WARgC,GAQjBC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,UAAU,GAAGF,CAAC,CAACG,MAAF,CAASC,IAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWE,UAAvB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBJ,UAAhC;AAEA,WAAKK,QAAL,CAAc;AAACT,QAAAA,UAAU,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,UAAf,EAA2BI,UAA3B;AAAb,OAAd;;AAGA,YAAMM,IAAI,GAAIC,CAAD,IAAO;AACnB,eAAO,IAAIC,GAAJ,CAAQD,CAAR,EAAWE,IAAX,KAAoBF,CAAC,CAACG,MAA7B;AACA,OAFD;;AAGAP,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAAC,KAAKZ,KAAL,CAAWE,UAAZ,CAAhB;AACD,KArB+B;;AAAA,SAwBhCe,OAxBgC,GAwBtB,MAAM;AACd,WAAKN,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAkB;AAA3B,OAAd;AACD,KA1B+B;;AAAA,SA6BhCiB,OA7BgC,GA6BtB,MAAM;AACd,YAAMvB,UAAU,GAAG,KAAKK,KAAL,CAAWL,UAAX,CAAsBwB,IAAtB,CAA2B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC3D,eAAO,MAAMC,IAAI,CAACC,MAAL,EAAb;AAED,OAHkB,CAAnB;AAIAd,MAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACA,WAAKgB,QAAL,CAAe;AAAChB,QAAAA;AAAD,OAAf,EANc,CAOd;AACD,KArC+B;AAAA;;AAwChC6B,EAAAA,MAAM,GAAG;AACP,WACE,0CACE,oBAAC,MAAD;AACA,MAAA,KAAK,EAAI,KAAKxB,KAAL,CAAWC,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAsB,MAAA,GAAG,EAAI,KAAKD,KAAL,CAAWL,UAAX,CAAsB8B,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzB,KAAL,CAAWL,UAAX,CAAsB+B,GAAtB,CAA0BC,SAAS,IAClC,oBAAE,aAAF;AACA,MAAA,GAAG,EAAIA,SAAS,CAACF,EADjB;AAEA,MAAA,UAAU,EAAI,KAAKtB,WAFnB;AAGE,MAAA,OAAO,EAAI,KAAKe,OAHlB;AAIE,MAAA,IAAI,EAAES,SAAS,CAACnB,IAJlB;AAKE,MAAA,KAAK,EAAEmB,SAAS,CAACC,KALnB;AAME,MAAA,KAAK,EAAI,KAAKX,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF,CAJF,CADF;AAqBD;;AA9D+B;;AAiElC,eAAenB,GAAf","sourcesContent":["import React from 'react';\nimport CharacterCard from \"./components/CharacterCard\";\nimport './App.css';\nimport characters from \"./characters.json\";\nimport Title from \"./components/Title\"\nimport NavBar from \"./components/Navbar\"\n\n\nclass App extends React.Component {\n  \n  state = {\n    characters,\n    score: 0,\n    userSelect: []\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const clickValue = e.target.name;\n    console.log(this.state.userSelect)\n    console.log(\"You clicked on \" + clickValue); \n    \n    this.setState({userSelect: [...this.state.userSelect, clickValue]})\n    \n    \n    const game = (x) => {\n     return new Set(x).size !== x.length\n    }\n    console.log(game(this.state.userSelect))\n  }\n\n  // Keep the score\n  scoring = () => {\n    this.setState({ score: this.state.score +1 });\n  }\n  \n  // Function to shuffle the characters once clicked on\n  shuffle = () => {\n    const characters = this.state.characters.sort(function(a, b) {\n      return 0.5 - Math.random()\n       \n    });\n    console.log(characters)\n    this.setState( {characters} ); \n    // console.log(this.state.characters)\n  };\n\n\n  render() {\n    return (\n      <>\n        <NavBar \n        score = {this.state.score}/>\n        <Title />\n        <div className='container wrapper'>\n          <div className='row'  key = {this.state.characters.id}>\n            {this.state.characters.map(character => (\n              < CharacterCard\n              key = {character.id}\n              clickValue = {this.handleClick}\n                shuffle = {this.shuffle}\n                name={character.name}\n                image={character.image}\n                score = {this.scoring}\n              />\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}